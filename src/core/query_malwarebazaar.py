import requests
import logging

# Configure logging
logging.basicConfig(level=logging.ERROR, format="%(asctime)s - %(levelname)s - %(message)s")

def query_malware_bazaar(hash_value):
    """Query MalwareBazaar for malware samples based on hash (MD5/SHA256)."""
    url = "https://mb-api.abuse.ch/api/v1/"
    payload = {"query": "get_info", "hash": hash_value}

    try:
        response = requests.post(url, data=payload)
        response.raise_for_status()
        result = response.json()

        if "query_status" in result and result["query_status"] == "hash_not_found":
            logging.warning(f"[WARNING] No malware sample found for hash: {hash_value}")
            return {"status": "not found", "hash": hash_value}

        return result

    except requests.exceptions.RequestException as e:
        logging.error(f"[ERROR] MalwareBazaar request failed: {e}")
        return {"error": "MalwareBazaar request failed", "message": str(e)}

if __name__ == "__main__":
    sample_hash = "44d88612fea8a8f36de82e1278abb02f"  # Example MD5 hash
    result = query_malware_bazaar(sample_hash)
    print(result)

